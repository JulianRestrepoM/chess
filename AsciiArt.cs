public static class AsciiArt {

    public static char[,] GenerateEmptyBlack() {
         char[,] emptyBlack =   {
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'},
                                    {'#','#','#','#','#','#'}
                                };
        return emptyBlack;
    }
    

public static char[,] GenerateEmptyWhite() {
    char[,] emptyWhite =    {
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return emptyWhite;

}

public static char[,] GeneneratePawnBlackOnBlack() {
    char[,] pawnBlackOnBlack =   {
                                {'|','|','|','|','#','#'},
                                {'\\','/','\\','/','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','/'},
                                {'#','#','#','(',')','_'},
                                {'#','#','#',')','(','_'},
                                {'#','#','#','#','#','\\'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return pawnBlackOnBlack;
}

public static char[,] GeneneratePawnWhiteOnBlack() {
    char[,] pawnWhiteOnBlack =   {
                                {'|','|','#','#','#','#'},
                                {' ','/','#','#','#','#'},
                                {'/',' ','#','#','#','#'},
                                {'\\',' ','#','#','#','#'},
                                {' ','\\','#','#','#','#'},
                                {'|','|','#','#','#','/'},
                                {'#','#','#','(',')','_'},
                                {'#','#','#',')','(','_'},
                                {'#','#','#','#','#','\\'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return pawnWhiteOnBlack;
}

public static char[,] GeneratePawnBlackOnWhite() {
    char[,] pawnBlackOnWhite =    {
                                {'|','|','|','|',' ',' '},
                                {'\\','/','\\','/',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ','/'},
                                {' ',' ',' ','(',')','_'},
                                {' ',' ',' ',')','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return pawnBlackOnWhite;
}

public static char[,] GeneratePawnWhiteOnWhite() {
    char[,] pawnWhiteOnWhite =    {
                                {'|','|',' ',' ',' ',' '},
                                {' ','/',' ',' ',' ',' '},
                                {'/',' ',' ',' ',' ',' '},
                                {'\\',' ',' ',' ',' ',' '},
                                {' ','\\',' ',' ',' ',' '},
                                {'|','|',' ',' ',' ','/'},
                                {' ',' ',' ','(',')','_'},
                                {' ',' ',' ',')','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return pawnWhiteOnWhite;
}

public static char[,] GenenerateRookBlackOnBlack() {
    char[,] rookBlackOnBlack =   {
                                {'|','|','|','|','#','#'},
                                {'\\','/','\\','/','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','/'},
                                {'#','#','I',')',')','_'},
                                {'#','#','I','(','(','_'},
                                {'#','#','#','#','#','\\'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return rookBlackOnBlack;
}

public static char[,] GenenerateRookWhiteOnBlack() {
    char[,] rookBlackOnBlack =   {
                                {'|','|','#','#','#','#'},
                                {' ','/','#','#','#','#'},
                                {'/',' ','#','#','#','#'},
                                {'\\',' ','#','#','#','#'},
                                {' ','\\','#','#','#','#'},
                                {'|','|','#','#','#','/'},
                                {'#','#','I',')',')','_'},
                                {'#','#','I','(','(','_'},
                                {'#','#','#','#','#','\\'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return rookBlackOnBlack;
}

public static char[,] GenerateRookBlackOnWhite() {
    char[,] pawnBlackOnWhite =    {
                                {'|','|','|','|',' ',' '},
                                {'\\','/','\\','/',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ','/'},
                                {' ',' ','I',')',')','_'},
                                {' ',' ','I','(','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return pawnBlackOnWhite;
}

public static char[,] GenerateRookWhiteOnWhite() {
    char[,] pawnBlackOnWhite =    {
                                {'|','|',' ',' ',' ',' '},
                                {' ','/',' ',' ',' ',' '},
                                {'/',' ',' ',' ',' ',' '},
                                {'\\',' ',' ',' ',' ',' '},
                                {' ','\\',' ',' ',' ',' '},
                                {'|','|',' ',' ',' ','/'},
                                {' ',' ','I',')',')','_'},
                                {' ',' ','I','(','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return pawnBlackOnWhite;
}

public static char[,] GenenerateKnightBlackOnBlack() {
    char[,] knightBlackOnBlack =   {
                                {'|','|','|','|','#','#'},
                                {'\\','/','\\','/','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','"','#','#'},
                                {'#','#','_','-','#','/'},
                                {'#','#','\'','=',')','_'},
                                {'#','#','\'','\\','(','_'},
                                {'#','#','#','~','#','\\'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return knightBlackOnBlack;
}

public static char[,] GenenerateKnightWhiteOnBlack() {
    char[,] knightBlackOnBlack =   {
                                {'|','|','#','#','#','#'},
                                {' ','/','#','#','#','#'},
                                {'/',' ','#','#','#','#'},
                                {'\\',' ','#','#','#','#'},
                                {' ','\\','#','"','#','#'},
                                {'|','|','_','-','#','/'},
                                {'#','#','\'','=',')','_'},
                                {'#','#','\'','\\','(','_'},
                                {'#','#','#','~','#','\\'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return knightBlackOnBlack;
}

public static char[,] GenerateKnightBlackOnWhite() {
    char[,] knightBlackOnWhite =    {
                                {'|','|','|','|',' ',' '},
                                {'\\','/','\\','/',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ','"',' ',' '},
                                {' ',' ',' ','-',' ','/'},
                                {' ',' ','_','=',')','_'},
                                {' ',' ','\'','\\','(','_'},
                                {' ',' ','\'','~',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return knightBlackOnWhite;
}

public static char[,] GenerateKnightWhiteOnWhite() {
    char[,] knightWhiteOnWhite =    {
                                {'|','|',' ',' ',' ',' '},
                                {' ','/',' ',' ',' ',' '},
                                {'/',' ',' ',' ',' ',' '},
                                {'\\',' ',' ',' ',' ',' '},
                                {' ','\\',' ','"',' ',' '},
                                {'|','|',' ','-',' ','/'},
                                {' ',' ','_','=',')','_'},
                                {' ',' ','\'','\\','(','_'},
                                {' ',' ','\'','~',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return knightWhiteOnWhite;
}

public static char[,] GenenerateBishopBlackOnBlack() {
    char[,] bishopBlackOnBlack =   {
                                {'|','|','|','|','#','#'},
                                {'\\','/','\\','/','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','/'},
                                {'#','#','(',')',')','_'},
                                {'#','#',')','(','(','_'},
                                {'#','#','#','#','#','\\'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return bishopBlackOnBlack;
}

public static char[,] GenenerateBishopWhiteOnBlack() {
    char[,] bishopWhiteOnBlack =   {
                                {'|','|','#','#','#','#'},
                                {' ','/','#','#','#','#'},
                                {'/',' ','#','#','#','#'},
                                {'\\',' ','#','#','#','#'},
                                {' ','\\','#','#','#',' '},
                                {'|','|',' ',' ',' ','/'},
                                {'#','#','(',')',')','_'},
                                {'#','#',')','(','(','_'},
                                {'#','#',' ',' ',' ','\\'},
                                {'#','#','#','#','#',' '},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return bishopWhiteOnBlack;
}

public static char[,] GenerateBishopBlackOnWhite() {
    char[,] bishopBlackOnWhite =    {
                                {'|','|','|','|',' ',' '},
                                {'\\','/','\\','/',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ','/'},
                                {' ',' ','(',')',')','_'},
                                {' ',' ',')','(','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return bishopBlackOnWhite;
}

public static char[,] GenerateBishopWhiteOnWhite() {
    char[,] bishopWhiteOnWhite =    {
                                {'|','|',' ',' ',' ',' '},
                                {' ','/',' ',' ',' ',' '},
                                {'/',' ',' ',' ',' ',' '},
                                {'\\',' ',' ',' ',' ',' '},
                                {' ','\\',' ',' ',' ',' '},
                                {'|','|',' ',' ',' ','/'},
                                {' ',' ','(',')',')','_'},
                                {' ',' ',')','(','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return bishopWhiteOnWhite;
}

public static char[,] GenenerateQueenBlackOnBlack() {
    char[,] queenBlackOnBlack =   {
                                {'|','|','|','|','#','#'},
                                {'\\','/','\\','/','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','/'},
                                {'#','.','(',')',')','_'},
                                {'#','#',')','(','(','_'},
                                {'#','#','#','#','#','\\'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return queenBlackOnBlack;
}

public static char[,] GenenerateQueenWhiteOnBlack() {
    char[,] queenWhiteOnBlack =   {
                                {'|','|','#','#','#','#'},
                                {' ','/','#','#','#','#'},
                                {'/',' ','#','#','#','#'},
                                {'\\',' ','#','#','#','#'},
                                {' ','\\','#','#','#',' '},
                                {'|','|',' ',' ',' ','/'},
                                {'#','.','(',')',')','_'},
                                {'#','#',')','(','(','_'},
                                {'#','#',' ',' ',' ','\\'},
                                {'#','#','#','#','#',' '},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return queenWhiteOnBlack;
}

public static char[,] GenerateQueenBlackOnWhite() {
    char[,] queenBlackOnWhite =    {
                                {'|','|','|','|',' ',' '},
                                {'\\','/','\\','/',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ','/'},
                                {' ','.','(',')',')','_'},
                                {' ',' ',')','(','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return queenBlackOnWhite;
}

public static char[,] GenerateQueenWhiteOnWhite() {
    char[,] queenWhiteOnWhite =    {
                                {'|','|',' ',' ',' ',' '},
                                {' ','/',' ',' ',' ',' '},
                                {'/',' ',' ',' ',' ',' '},
                                {'\\',' ',' ',' ',' ',' '},
                                {' ','\\',' ',' ',' ',' '},
                                {'|','|',' ',' ',' ','/'},
                                {' ','.','(',')',')','_'},
                                {' ',' ',')','(','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return queenWhiteOnWhite;
}

public static char[,] GenenerateKingBlackOnBlack() {
    char[,] kingBlackOnBlack =   {
                                {'|','|','|','|','#','#'},
                                {'\\','/','\\','/','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','/'},
                                {'#','+','(',')',')','_'},
                                {'#','#',')','(','(','_'},
                                {'#','#','#','#','#','\\'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return kingBlackOnBlack;
}

public static char[,] GenenerateKingWhiteOnBlack() {
    char[,] kingWhiteOnBlack =   {
                                {'|','|','#','#','#','#'},
                                {' ','/','#','#','#','#'},
                                {'/',' ','#','#','#','#'},
                                {'\\',' ','#','#','#','#'},
                                {' ','\\','#','#','#',' '},
                                {'|','|',' ',' ',' ','/'},
                                {'#','+','(',')',')','_'},
                                {'#','#',')','(','(','_'},
                                {'#','#',' ',' ',' ','\\'},
                                {'#','#','#','#','#',' '},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'},
                                {'#','#','#','#','#','#'}
                            };
    return kingWhiteOnBlack;
}

public static char[,] GenerateKingBlackOnWhite() {
    char[,] kingBlackOnWhite =    {
                                {'|','|','|','|',' ',' '},
                                {'\\','/','\\','/',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ','/'},
                                {' ','+','(',')',')','_'},
                                {' ',' ',')','(','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return kingBlackOnWhite;
}

public static char[,] GenerateKingWhiteOnWhite() {
    char[,] kingWhiteOnWhite =    {
                                {'|','|',' ',' ',' ',' '},
                                {' ','/',' ',' ',' ',' '},
                                {'/',' ',' ',' ',' ',' '},
                                {'\\',' ',' ',' ',' ',' '},
                                {' ','\\',' ',' ',' ',' '},
                                {'|','|',' ',' ',' ','/'},
                                {' ','+','(',')',')','_'},
                                {' ',' ',')','(','(','_'},
                                {' ',' ',' ',' ',' ','\\'},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '},
                                {' ',' ',' ',' ',' ',' '}
                            };
    return kingWhiteOnWhite;
}
    
}